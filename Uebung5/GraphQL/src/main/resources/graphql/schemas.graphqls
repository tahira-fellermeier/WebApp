
# User type defines the structure of a User object
type User {
    id: ID!
    role: String!
    firstName: String!
    lastName: String!
    email: String!
    password: String! # Hinweis: In der Praxis sollte das Passwort nicht als Teil der API zurückgegeben oder gespeichert werden, um die Sicherheit zu gewährleisten
}

# Query type defines all the read operations

type Query {
    allUsers: [User]!
    users(count: Int!, offset: Int!): [User]!

# Gibt eine paginierte Liste von Benutzern zurück. 
# count = die Anzahl der zurückgegebenen Benutzer
# offset = von welchem Benutzer die Rückgabe beginnen soll
    userById(id: ID): User!
}

# Mutation type defines all the post, put and delete operations
type Mutation {
    addUser(role: String!, firstName: String!, lastName: String!, email: String!, password: String!): User!
    updateUser(id: ID!, role: String!, firstName: String!, lastName: String!, email: String!, password: String!): User!
    deleteUser(id: ID!): Int
}
